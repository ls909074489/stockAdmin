<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd">

	<description>Shiro安全配置</description>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="yyshiroRealm" />
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="sessionManager" ref="sessionManager" />
	</bean>

	<!-- 項目自定义的Realm, 所有accountService依赖的dao都需要用depends-on声明 -->
	<bean id="yyshiroRealm" class="com.king.frame.security.ShiroRealm">
	</bean>

	<!-- <bean id="orgInitialPostProcess" class="com.king.modules.sys.org.OrgInitial"/> 
		<bean id="orgService" class="com.king.modules.sys.org.OrgService"/> -->

	<!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置 http://my.oschina.net/u/1442577/blog/531460 -->
	<bean id="formAuthenticationFilter" class="com.king.frame.security.MyFormAuthenticationFilter">
		<!-- 表单中账号的input名称 -->
		<property name="usernameParam" value="username" />
		<!-- 表单中密码的input名称 -->
		<property name="passwordParam" value="password" />
		<!-- <property name="rememberMeParam" value="rememberMe"/> -->
		<!-- loginurl：用户登陆地址，此地址是可以http访问的url地址 -->
		<property name="loginUrl" value="/login" />
	</bean>

	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/" />
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/static/** = anon
				/assets/** = anon
				/favicon.ico = anon
				/druid/** = anon
				/sys/documents/* = anon
				/login/getValidateVode = anon
				/login = authc
				/logout = logout
				/sys/log/** = user
				/login/showEnterAccount = anon
				/login/validateLoginName = anon
				/login/showUserName = anon
				/login/checkUserName = anon
				/login/showNewPwd = anon
				/info/stockdetail/search = anon
				/info/stockdetail/dataSearch = anon
				/info/stockstream/toRecord = anon
				/info/stockstream/dataRecord = anon
				/info/apply/query = anon
				/** = user,perms
			</value>
		</property>
	</bean>
	

	<!-- 用户授权信息Cache, 采用EhCache -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:${shiro.ehcache.configFile}" />
	</bean>

	<!-- 用ServletContainerSessionManager可以沿用web.xml中配置的超时时间 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.ServletContainerSessionManager">
		<!-- <property name="sessionDAO" ref="sessionDAO" /> -->
	</bean>

	<!-- AOP式方法级权限检查 -->
	<aop:config proxy-target-class="true" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>

	<!-- <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" 
		></bean> -->

	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
</beans>